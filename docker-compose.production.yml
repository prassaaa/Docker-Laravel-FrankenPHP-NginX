x-php: &php
  build:
    context: docker/php
    dockerfile: php.dockerfile
    args:
      ENVIRONMENT: production
  restart: unless-stopped
  working_dir: /srv
  volumes:
    - .:/srv

x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: 10

services:
  nginx:
    <<: *logging
    build:
      context: docker/nginx
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/templates/app.conf.template
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - php
      - redis
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  php:
    <<: [*php, *logging]
    environment:
      - SERVER_NAME=:8080
      - APP_ENV=production
      - FRANKENPHP_WORKERS=auto
      - FRANKENPHP_MAX_REQUESTS=1000
      - AUTO_MIGRATE=false
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 512M

  scheduler:
    <<: [*php, *logging]
    command: supercronic /srv/docker/php/config/schedule.cron
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  queue:
    <<: [*php, *logging]
    command: php artisan queue:work --timeout=0
    healthcheck:
      disable: true
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  redis:
    <<: *logging
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_data:/data
    networks:
      - default
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_MAXMEMORY_POLICY=allkeys-lru

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: laravel_prod
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1450"
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/16
          gateway: 172.21.0.1

volumes:
  redis_data:
    driver: local
